{
    "html": [
        {
            "text": "\n<div class=\"highlight code\"><pre>\n<span></span><span class=\"kd\">class</span> <span class=\"nc\">Stack</span> <span class=\"p\">{</span>\n   <span class=\"kd\">private</span> <span class=\"n\">LinkedList</span> <span class=\"n\">linkedList</span><span class=\"p\">;</span>\n    \n   <span class=\"n\">Stack</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"n\">linkedList</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">LinkedList</span><span class=\"p\">();</span>\n   <span class=\"p\">}</span>\n   \n   <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">push</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">newData</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"c1\">// Create a new node and prepend</span>\n      <span class=\"n\">Node</span> <span class=\"n\">newNode</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"n\">newData</span><span class=\"p\">);</span>\n      <span class=\"n\">linkedList</span><span class=\"p\">.</span><span class=\"na\">prepend</span><span class=\"p\">(</span><span class=\"n\">newNode</span><span class=\"p\">);</span>\n   <span class=\"p\">}</span>\n   \n   <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">pop</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"c1\">// Copy list head&#39;s data</span>\n      <span class=\"kt\">int</span> <span class=\"n\">poppedItem</span> <span class=\"o\">=</span> <span class=\"n\">linkedList</span><span class=\"p\">.</span><span class=\"na\">getHeadData</span><span class=\"p\">();</span>\n      \n      <span class=\"c1\">// Remove list head</span>\n      <span class=\"n\">linkedList</span><span class=\"p\">.</span><span class=\"na\">removeAfter</span><span class=\"p\">(</span><span class=\"kc\">null</span><span class=\"p\">);</span>\n      \n      <span class=\"c1\">// Return popped item</span>\n      <span class=\"k\">return</span> <span class=\"n\">poppedItem</span><span class=\"p\">;</span>\n   <span class=\"p\">}</span>\n   \n   <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">print</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"n\">linkedList</span><span class=\"p\">.</span><span class=\"na\">printList</span><span class=\"p\">();</span>\n   <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">StackDemo</span> <span class=\"p\">{</span>\n   <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">args</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"kt\">int</span><span class=\"o\">[]</span> <span class=\"n\">numbers</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"mi\">91</span><span class=\"p\">,</span> <span class=\"mi\">66</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">46</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">65</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">77</span> <span class=\"p\">};</span>\n      \n      <span class=\"c1\">// Initialize a new Stack and add numbers</span>\n      <span class=\"n\">Stack</span> <span class=\"n\">numStack</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Stack</span><span class=\"p\">();</span>\n      <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">number</span> <span class=\"p\">:</span> <span class=\"n\">numbers</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n          <span class=\"n\">numStack</span><span class=\"p\">.</span><span class=\"na\">push</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">);</span>\n      <span class=\"p\">}</span>\n\n      <span class=\"c1\">// Output stack</span>\n      <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;Stack after push: &quot;</span><span class=\"p\">);</span>\n      <span class=\"n\">numStack</span><span class=\"p\">.</span><span class=\"na\">print</span><span class=\"p\">();</span>\n      \n      <span class=\"c1\">// Pop 77 and print</span>\n      <span class=\"n\">numStack</span><span class=\"p\">.</span><span class=\"na\">pop</span><span class=\"p\">();</span>\n      <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;Stack after first pop: &quot;</span><span class=\"p\">);</span>\n      <span class=\"n\">numStack</span><span class=\"p\">.</span><span class=\"na\">print</span><span class=\"p\">();</span>\n      \n      <span class=\"c1\">// Pop 6 and print</span>\n      <span class=\"n\">numStack</span><span class=\"p\">.</span><span class=\"na\">pop</span><span class=\"p\">();</span>\n      <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;Stack after second pop: &quot;</span><span class=\"p\">);</span>\n      <span class=\"n\">numStack</span><span class=\"p\">.</span><span class=\"na\">print</span><span class=\"p\">();</span>\n   <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div><div class=\"console\"><pre>Stack after push: 77 6 65 23 46 9 66 91 \nStack after first pop: 6 65 23 46 9 66 91 \nStack after second pop: 65 23 46 9 66 91</pre></div>\n\n\n",
            "attributes": [
                {
                    "type": "html"
                }
            ]
        }
    ],
    "ref": "",
    "name": "Figure"
}